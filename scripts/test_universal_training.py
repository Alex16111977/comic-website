"""
–¢–µ—Å—Ç —É–Ω—ñ–≤–µ—Ä—Å–∞–ª—å–Ω–æ—ó —Å–∏—Å—Ç–µ–º–∏ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è
–î–∞—Ç–∞: 20.09.2025
"""
import subprocess
import sys
from pathlib import Path
import json

print("[!] –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —É–Ω—ñ–≤–µ—Ä—Å–∞–ª—å–Ω–æ—ó —Å–∏—Å—Ç–µ–º–∏ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è")

# 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —à–∞–±–ª–æ–Ω–∞
template_file = Path(r'F:\AiKlientBank\KingLearComic\templates\training.html')
if template_file.exists():
    print("[OK] –®–∞–±–ª–æ–Ω training.html –Ω–∞–π–¥–µ–Ω")
else:
    print("[ERROR] –®–∞–±–ª–æ–Ω training.html –ù–ï –Ω–∞–π–¥–µ–Ω")

# 2. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–∞–π—Ç
print("\n[!] –ì–µ–Ω–µ—Ä–∏—Ä—É—é —Å–∞–π—Ç...")
result = subprocess.run(
    [sys.executable, 'main.py'],
    capture_output=True,
    text=True,
    cwd=r'F:\AiKlientBank\KingLearComic'
)

if result.returncode == 0:
    print("[OK] –°–∞–π—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω")
else:
    print("[ERROR] –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏")
    print("Stdout:", result.stdout)
    print("Stderr:", result.stderr)

# 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ training.html —Å–æ–∑–¥–∞–Ω
output_file = Path(r'F:\AiKlientBank\KingLearComic\output\training.html')
if output_file.exists():
    print("[OK] –§–∞–π–ª output/training.html —Å–æ–∑–¥–∞–Ω")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
    content = output_file.read_text(encoding='utf-8')
    checks = [
        ('TrainingSystem.init()', '–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã'),
        ('showIntroduction', '–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞'),
        ('showChooseTranslation', '–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ –≤—ã–±–æ—Ä–∞ –ø–µ—Ä–µ–≤–æ–¥–∞'),
        ('showReverseTranslation', '–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –ø–µ—Ä–µ–≤–æ–¥–∞'),
        ('showArticleExercise', '–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ —Å –∞—Ä—Ç–∏–∫–ª–µ–º'),
        ('showContextExercise', '–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞'),
        ('loadWordExamples', '–ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–∏–º–µ—Ä–æ–≤'),
        ('localStorage', '–†–∞–±–æ—Ç–∞ —Å localStorage')
    ]
    
    print("\n[!] –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞:")
    for check_str, desc in checks:
        if check_str in content:
            print(f"  [OK] {desc}")
        else:
            print(f"  [ERROR] –ù–ï –Ω–∞–π–¥–µ–Ω–æ: {desc}")
else:
    print("[ERROR] –§–∞–π–ª output/training.html –ù–ï —Å–æ–∑–¥–∞–Ω")

# 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å—Å—ã–ª–∫–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –≤ index.html
index_file = Path(r'F:\AiKlientBank\KingLearComic\output\index.html')
if index_file.exists():
    content = index_file.read_text(encoding='utf-8')
    
    if 'training.html?word=' in content:
        print("\n[OK] –°—Å—ã–ª–∫–∏ –Ω–∞ training.html —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –Ω–∞–π–¥–µ–Ω—ã")
    else:
        print("\n[ERROR] –°—Å—ã–ª–∫–∏ –Ω–∞ training.html –ù–ï –Ω–∞–π–¥–µ–Ω—ã")

# 5. –°–∏–º—É–ª—è—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–ª–æ–≤ –≤ localStorage
print("\n[!] –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è localStorage:")
test_words = [
    {
        "id": "der_thron",
        "word": "der Thron",
        "translation": "—Ç—Ä–æ–Ω",
        "transcription": "[—Ç—Ä–æ–Ω]",
        "emoji": "üëë",
        "level": "A2"
    },
    {
        "id": "die_macht",
        "word": "die Macht", 
        "translation": "–≤–ª–∞—Å—Ç—å",
        "transcription": "[–º–∞—Ö—Ç]",
        "emoji": "‚ö°",
        "level": "B1"
    }
]

print(f"  –°–ª–æ–≤–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {len(test_words)}")
for word in test_words:
    print(f"  - {word['word']} -> training.html?word={word['id']}")

print("\n[!] –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")
print("[!] –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞ –æ—Ç–∫—Ä–æ–π—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ:")
print("  1. output/index.html")
print("  2. –î–æ–±–∞–≤—å—Ç–µ —Å–ª–æ–≤–∞ —á–µ—Ä–µ–∑ '–ò–∑—É—á–∏—Ç—å' –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π")
print("  3. –ù–∞–∂–º–∏—Ç–µ '–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞' –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ")
