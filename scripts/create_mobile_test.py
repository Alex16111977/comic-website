"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–±–∏–ª—å–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π
"""
import json
from pathlib import Path

# –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é HTML —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
html_content = """<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="mobile-web-app-capable" content="yes">
    <title>–¢–µ—Å—Ç –º–æ–±–∏–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏ - King Lear</title>
    <style>
        * { 
            margin: 0; 
            padding: 0; 
            box-sizing: border-box;
            -webkit-tap-highlight-color: transparent;
        }
        
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
        }
        
        .container {
            max-width: 800px;
            margin: 0 auto;
            background: white;
            border-radius: 20px;
            padding: 30px;
            box-shadow: 0 10px 40px rgba(0,0,0,0.2);
        }
        
        h1 {
            color: #2d3748;
            font-size: 1.8em;
            margin-bottom: 20px;
            text-align: center;
        }
        
        .device-info {
            background: #f7fafc;
            padding: 15px;
            border-radius: 10px;
            margin-bottom: 30px;
            font-size: 0.9em;
            color: #4a5568;
        }
        
        .exercise-section {
            background: linear-gradient(135deg, #fff9e6 0%, #fff4d6 100%);
            border: 2px solid #f6ad55;
            padding: 25px;
            border-radius: 15px;
            margin: 20px 0;
        }
        
        .exercise-title {
            color: #d97706;
            font-size: 1.3em;
            font-weight: 700;
            margin-bottom: 20px;
            text-align: center;
        }
        
        .exercise-text {
            color: #4a5568;
            font-size: 1.05em;
            line-height: 1.8;
        }
        
        .blank {
            display: inline-block;
            min-width: 100px;
            border-bottom: 2px solid #f6ad55;
            margin: 0 4px;
            padding: 2px 6px;
            color: #a0aec0;
            font-style: italic;
            transition: all 0.3s ease;
        }
        
        .show-answer-btn {
            background: linear-gradient(135deg, #f6ad55 0%, #ed8936 100%);
            color: white;
            border: none;
            padding: 18px 36px;
            border-radius: 12px;
            font-size: 1.15em;
            font-weight: 600;
            cursor: pointer;
            margin: 20px auto;
            display: block;
            width: 90%;
            max-width: 300px;
            transition: all 0.3s ease;
            box-shadow: 0 4px 12px rgba(237, 137, 54, 0.3);
            /* Mobile optimizations */
            touch-action: manipulation;
            -webkit-tap-highlight-color: transparent;
            -webkit-touch-callout: none;
            -webkit-user-select: none;
            user-select: none;
            min-height: 56px;
        }
        
        .show-answer-btn:active {
            transform: scale(0.98);
            opacity: 0.9;
            box-shadow: 0 2px 8px rgba(237, 137, 54, 0.3);
        }
        
        .test-info {
            background: #e6fffa;
            border: 1px solid #4fd1c5;
            padding: 15px;
            border-radius: 10px;
            margin-top: 30px;
            color: #234e52;
        }
        
        .test-info h3 {
            margin-bottom: 10px;
            color: #065666;
        }
        
        .test-info ul {
            margin-left: 20px;
        }
        
        .test-info li {
            margin: 5px 0;
        }
        
        @media (hover: none) and (pointer: coarse) {
            .show-answer-btn {
                background: linear-gradient(135deg, #f6ad55 0%, #ed8936 100%);
            }
        }
        
        /* iOS specific */
        @supports (-webkit-touch-callout: none) {
            .show-answer-btn {
                -webkit-appearance: none;
                appearance: none;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>üé≠ –¢–µ—Å—Ç –º–æ–±–∏–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏</h1>
        
        <div class="device-info">
            <strong>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ:</strong>
            <div id="deviceInfo"></div>
        </div>
        
        <div class="exercise-section">
            <h2 class="exercise-title">üìù –¢–µ—Å—Ç–æ–≤–æ–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ</h2>
            <div class="exercise-text">
                –í–µ–ª–∏–∫–æ–ª–µ–ø–Ω—ã–π <span class="blank" data-answer="PR√ÑCHTIGER" data-hint="–≤–µ–ª–∏–∫–æ–ª–µ–ø–Ω—ã–π">_______ (–≤–µ–ª–∏–∫–æ–ª–µ–ø–Ω—ã–π)</span> 
                —Ç—Ä–æ–Ω–Ω—ã–π –∑–∞–ª. –ö–æ—Ä–æ–ª—å –≤–æ—Å—Å–µ–¥–∞–µ—Ç –Ω–∞ <span class="blank" data-answer="THRON" data-hint="—Ç—Ä–æ–Ω–µ">_______ (—Ç—Ä–æ–Ω–µ)</span>, 
                –µ–≥–æ <span class="blank" data-answer="KRONE" data-hint="–∫–æ—Ä–æ–Ω–∞">_______ (–∫–æ—Ä–æ–Ω–∞)</span> —Å–≤–µ—Ä–∫–∞–µ—Ç –≤ —Å–≤–µ—Ç–µ —Ñ–∞–∫–µ–ª–æ–≤.
            </div>
            <button class="show-answer-btn" type="button" onclick="toggleAnswers(this)">
                –ü–æ–∫–∞–∑–∞—Ç—å –æ—Ç–≤–µ—Ç—ã
            </button>
        </div>
        
        <div class="test-info">
            <h3>‚úÖ –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å:</h3>
            <ul>
                <li>–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ü–æ–∫–∞–∑–∞—Ç—å –æ—Ç–≤–µ—Ç—ã"</li>
                <li>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –Ω–µ–º–µ—Ü–∫–∏–µ —Å–ª–æ–≤–∞ –ø–æ—è–≤–ª—è—é—Ç—Å—è</li>
                <li>–ù–∞–∂–º–∏—Ç–µ "–°–∫—Ä—ã—Ç—å –æ—Ç–≤–µ—Ç—ã"</li>
                <li>–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∫–Ω–æ–ø–∫–∞ —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ –∫–∞—Å–∞–Ω–∏–µ</li>
                <li>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –¥–≤–æ–π–Ω—ã—Ö –∫–ª–∏–∫–æ–≤</li>
                <li>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–∏ –¥–≤–æ–π–Ω–æ–º —Ç–∞–ø–µ</li>
            </ul>
        </div>
    </div>
    
    <script>
        // Device detection
        function getDeviceInfo() {
            const info = {
                userAgent: navigator.userAgent,
                platform: navigator.platform,
                touchSupport: 'ontouchstart' in window,
                screenWidth: screen.width,
                screenHeight: screen.height,
                devicePixelRatio: window.devicePixelRatio
            };
            
            let deviceType = 'Desktop';
            if (/iPhone|iPad|iPod/.test(info.userAgent)) {
                deviceType = 'iOS Device';
            } else if (/Android/.test(info.userAgent)) {
                deviceType = 'Android Device';
            } else if (info.touchSupport) {
                deviceType = 'Touch Device';
            }
            
            return `
                <p>–¢–∏–ø: <strong>${deviceType}</strong></p>
                <p>–≠–∫—Ä–∞–Ω: ${info.screenWidth}x${info.screenHeight} (DPR: ${info.devicePixelRatio})</p>
                <p>Touch: ${info.touchSupport ? '‚úÖ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è' : '‚ùå –ù–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è'}</p>
            `;
        }
        
        // Display device info
        document.getElementById('deviceInfo').innerHTML = getDeviceInfo();
        
        // Toggle answers function
        function toggleAnswers(button) {
            // Prevent double tap
            if (button.dataset.processing === 'true') return;
            button.dataset.processing = 'true';
            
            const exerciseSection = button.closest('.exercise-section');
            const blanks = exerciseSection.querySelectorAll('.blank');
            
            if (button.textContent.trim() === '–ü–æ–∫–∞–∑–∞—Ç—å –æ—Ç–≤–µ—Ç—ã') {
                blanks.forEach(blank => {
                    const answer = blank.getAttribute('data-answer');
                    const hint = blank.getAttribute('data-hint');
                    if (answer && hint) {
                        blank.innerHTML = answer + ' (' + hint + ')';
                        blank.style.color = '#d97706';
                        blank.style.fontWeight = '600';
                        blank.style.fontStyle = 'normal';
                        blank.style.borderBottomColor = '#22c55e';
                    }
                });
                button.textContent = '–°–∫—Ä—ã—Ç—å –æ—Ç–≤–µ—Ç—ã';
                button.style.background = 'linear-gradient(135deg, #22c55e 0%, #16a34a 100%)';
            } else {
                blanks.forEach(blank => {
                    const hint = blank.getAttribute('data-hint');
                    if (hint) {
                        blank.innerHTML = '_______ (' + hint + ')';
                        blank.style.color = '#a0aec0';
                        blank.style.fontWeight = 'normal';
                        blank.style.fontStyle = 'italic';
                        blank.style.borderBottomColor = '#f6ad55';
                    }
                });
                button.textContent = '–ü–æ–∫–∞–∑–∞—Ç—å –æ—Ç–≤–µ—Ç—ã';
                button.style.background = 'linear-gradient(135deg, #f6ad55 0%, #ed8936 100%)';
            }
            
            // Reset processing flag
            setTimeout(() => {
                button.dataset.processing = 'false';
            }, 300);
            
            // Log for debugging
            console.log('Button clicked, answers toggled');
        }
        
        // Add touch event listeners
        document.addEventListener('DOMContentLoaded', function() {
            const button = document.querySelector('.show-answer-btn');
            
            // Prevent iOS double-tap zoom
            let lastTouchTime = 0;
            button.addEventListener('touchstart', function(e) {
                const currentTime = new Date().getTime();
                const tapLength = currentTime - lastTouchTime;
                if (tapLength < 500 && tapLength > 0) {
                    e.preventDefault();
                }
                lastTouchTime = currentTime;
            });
            
            // Add visual feedback for touch
            button.addEventListener('touchstart', function() {
                this.style.opacity = '0.8';
            });
            
            button.addEventListener('touchend', function() {
                this.style.opacity = '1';
            });
            
            console.log('Mobile test page loaded successfully');
        });
    </script>
</body>
</html>"""

# –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
output_path = Path(r'F:\AiKlientBank\KingLearComic\output\mobile_test.html')
with open(output_path, 'w', encoding='utf-8') as f:
    f.write(html_content)

print(f"[OK] –°–æ–∑–¥–∞–Ω–∞ —Ç–µ—Å—Ç–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞: {output_path}")
print("\n[–ò–ù–°–¢–†–£–ö–¶–ò–Ø –î–õ–Ø –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø]")
print("=" * 60)
print("1. –û—Ç–∫—Ä–æ–π—Ç–µ –Ω–∞ –º–æ–±–∏–ª—å–Ω–æ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ:")
print(f"   file:///{output_path}")
print("\n2. –ò–ª–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ –ª–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä:")
print("   python -m http.server 8000")
print("   –ò –æ—Ç–∫—Ä–æ–π—Ç–µ: http://[–≤–∞—à-ip]:8000/output/mobile_test.html")
print("\n3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –Ω–∞:")
print("   - iPhone (Safari)")
print("   - iPad (Safari)")
print("   - Android —Ç–µ–ª–µ—Ñ–æ–Ω (Chrome)")
print("   - Android –ø–ª–∞–Ω—à–µ—Ç (Chrome)")
print("\n4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:")
print("   ‚úì –ö–Ω–æ–ø–∫–∞ —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ –ø–µ—Ä–≤–æ–µ –∫–∞—Å–∞–Ω–∏–µ")
print("   ‚úì –ù–µ—Ç –¥–≤–æ–π–Ω—ã—Ö –∫–ª–∏–∫–æ–≤")
print("   ‚úì –ù–µ—Ç –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–∏ –¥–≤–æ–π–Ω–æ–º —Ç–∞–ø–µ")
print("   ‚úì –û—Ç–≤–µ—Ç—ã –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç—Å—è/—Å–∫—Ä—ã–≤–∞—é—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
print("   ‚úì –ö–Ω–æ–ø–∫–∞ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–æ–ª—å—à–∞—è –¥–ª—è –ø–∞–ª—å—Ü–∞")
print("=" * 60)
