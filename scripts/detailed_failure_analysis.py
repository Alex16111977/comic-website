#!/usr/bin/env python
"""
–î–ï–¢–ê–õ–¨–ù–ò–ô –ê–ù–ê–õ–Ü–ó –ü–†–û–ë–õ–ï–ú –ó –í–ò–ö–û–ù–ê–ù–ù–Ø–ú –ü–†–û–ú–ü–¢–£
"""
from pathlib import Path
import re

print("=" * 70)
print("–î–ï–¢–ê–õ–¨–ù–ò–ô –ê–ù–ê–õ–Ü–ó: –©–û –°–ê–ú–ï –ü–Ü–®–õ–û –ù–ï –¢–ê–ö")
print("=" * 70)

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ mnemonics_gen.py
mnemo_file = Path(r"F:\AiKlientBank\KingLearComic\generators\mnemonics_gen.py")
print("\nüîç –ê–ù–ê–õ–Ü–ó mnemonics_gen.py:")
print("-" * 60)

if mnemo_file.exists():
    with open(mnemo_file, 'r', encoding='utf-8') as f:
        content = f.read()
    
    # –ó–Ω–∞–π—Ç–∏ —Å–∏–≥–Ω–∞—Ç—É—Ä—É –º–µ—Ç–æ–¥—É generate_articles_quiz
    quiz_method = re.search(r'def generate_articles_quiz\(self[^)]*\)', content)
    if quiz_method:
        print(f"–°–∏–≥–Ω–∞—Ç—É—Ä–∞ –º–µ—Ç–æ–¥—É: {quiz_method.group()}")
        if "phase_id" not in quiz_method.group():
            print("‚ùå –ü–†–û–ë–õ–ï–ú–ê: phase_id –ø–∞—Ä–∞–º–µ—Ç—Ä –ù–ï –î–û–î–ê–ù–ò–ô")
            print("   –ú–µ—Ç–æ–¥ –Ω–µ –º–æ–∂–µ –æ—Ç—Ä–∏–º–∞—Ç–∏ ID —Ñ–∞–∑–∏ –¥–ª—è –≤–∏–±–æ—Ä—É –ø—Ä–∞–≤–∏–ª—å–Ω–∏—Ö —Å–ª—ñ–≤")
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —Å–ª—ñ–≤
    if "self.get_phase_vocabulary" in content:
        print("‚úÖ –ú–µ—Ç–æ–¥ get_phase_vocabulary –≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è")
    else:
        print("‚ùå –ü–†–û–ë–õ–ï–ú–ê: get_phase_vocabulary –ù–ï –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è")
        print("   –ó–∞–º—ñ—Å—Ç—å —Å–ª—ñ–≤ –∑ —Ñ–∞–∑–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å—Å—è –≤–∏–ø–∞–¥–∫–æ–≤—ñ —Å–ª–æ–≤–∞")
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ CSS —Å—Ç–∏–ª—ñ–≤
    css_section = re.search(r'def generate_css\(self\):(.*?)(?=def|\Z)', content, re.DOTALL)
    if css_section:
        css_content = css_section.group(1)
        if "linear-gradient" in css_content:
            print("‚úÖ CSS –º—ñ—Å—Ç–∏—Ç—å –≥—Ä–∞–¥—ñ—î–Ω—Ç–∏")
        else:
            print("‚ùå –ü–†–û–ë–õ–ï–ú–ê: CSS –ù–ï –º—ñ—Å—Ç–∏—Ç—å –≥—Ä–∞–¥—ñ—î–Ω—Ç—ñ–≤ –¥–ª—è –∫–æ–ª—å–æ—Ä–æ–≤–æ—ó –∫–æ–¥–∏—Ä–æ–≤–∫–∏")
            print("   –ö–∞—Ä—Ç–∫–∏ –Ω–µ –±—É–¥—É—Ç—å –º–∞—Ç–∏ –∫–æ–ª—å–æ—Ä–æ–≤—ñ —Ñ–æ–Ω–∏")

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ html_lira.py
html_lira = Path(r"F:\AiKlientBank\KingLearComic\generators\html_lira.py")
print("\nüîç –ê–ù–ê–õ–Ü–ó html_lira.py:")
print("-" * 60)

if html_lira.exists():
    with open(html_lira, 'r', encoding='utf-8') as f:
        content = f.read()
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø–µ—Ä–µ–¥–∞—á—ñ phase_id
    if "phase_id=first_phase_id" in content or "phase_id=" in content:
        print("‚úÖ phase_id –ø–µ—Ä–µ–¥–∞—î—Ç—å—Å—è –≤ generate_articles_quiz")
    else:
        print("‚ùå –ü–†–û–ë–õ–ï–ú–ê: phase_id –ù–ï –ø–µ—Ä–µ–¥–∞—î—Ç—å—Å—è")
        print("   –í–ø—Ä–∞–≤–∞ –Ω–µ –∑–Ω–∞—î, –∑ —è–∫–æ—ó —Ñ–∞–∑–∏ –±—Ä–∞—Ç–∏ —Å–ª–æ–≤–∞")
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø–∞—Ç—á—É
    if "exercises_pattern = " in content:
        print("‚úÖ –ü–∞—Ç—á –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ –≤–ø—Ä–∞–≤–∏ –∑–∞—Å—Ç–æ—Å–æ–≤–∞–Ω–æ")
    else:
        print("‚ùå –ü–†–û–ë–õ–ï–ú–ê: –ü–∞—Ç—á –ù–ï –∑–∞—Å—Ç–æ—Å–æ–≤–∞–Ω–æ")
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è —Å—Ç–∞—Ä–æ–≥–æ –∫–æ–¥—É
    if "if False:" in content:
        print("‚úÖ –°—Ç–∞—Ä–∏–π –∫–æ–¥ –≤–∏–º–∫–Ω–µ–Ω–æ")
    else:
        print("‚ùó –°—Ç–∞—Ä–∏–π –∫–æ–¥ –º–æ–∂–µ –≤—Å–µ —â–µ –≤–∏–∫–æ–Ω—É–≤–∞—Ç–∏—Å—è")

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É –≤ HTML
output_file = Path(r"F:\AiKlientBank\KingLearComic\output\journeys\king_lear.html")
print("\nüîç –ê–ù–ê–õ–Ü–ó –ó–ì–ï–ù–ï–†–û–í–ê–ù–û–ì–û HTML:")
print("-" * 60)

if output_file.exists():
    with open(output_file, 'r', encoding='utf-8') as f:
        html = f.read()
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å–ª–æ–≤–Ω–∏–∫–∞
    vocab_section = re.search(r'vocabulary-grid.*?</div>', html, re.DOTALL)
    if vocab_section:
        vocab_content = vocab_section.group()
        
        # –†–∞—Ö—É—î–º–æ –∫–∞—Ä—Ç–∫–∏
        vocab_cards = vocab_content.count('vocab-card')
        print(f"–ó–Ω–∞–π–¥–µ–Ω–æ –∫–∞—Ä—Ç–æ–∫ —Å–ª–æ–≤–Ω–∏–∫–∞: {vocab_cards}")
        
        # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–æ–ª—å–æ—Ä—ñ–≤
        has_colors = 'is-der' in vocab_content or 'is-die' in vocab_content
        if has_colors:
            print("‚úÖ –ö–∞—Ä—Ç–∫–∏ –º–∞—é—Ç—å –∫–æ–ª—å–æ—Ä–æ–≤—ñ –∫–ª–∞—Å–∏")
        else:
            print("‚ùå –ü–†–û–ë–õ–ï–ú–ê: –ö–∞—Ä—Ç–∫–∏ –ù–ï –º–∞—é—Ç—å –∫–æ–ª—å–æ—Ä–æ–≤–∏—Ö –∫–ª–∞—Å—ñ–≤")
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤–ø—Ä–∞–≤–∏ –Ω–∞ –∞—Ä—Ç–∏–∫–ª—ñ
    articles_section = re.search(r'articles-quiz.*?</div>', html, re.DOTALL)
    if articles_section:
        articles_content = articles_section.group()
        
        # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å–ª—ñ–≤ —É –≤–ø—Ä–∞–≤—ñ
        wrong_words = ['Undankbarkeit', 'Kr√§nkung', 'Fluch']
        has_wrong = any(word in articles_content for word in wrong_words)
        
        if has_wrong:
            print("‚ùå –ü–†–û–ë–õ–ï–ú–ê: –í–ø—Ä–∞–≤–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î –ù–ï–ü–†–ê–í–ò–õ–¨–ù–Ü —Å–ª–æ–≤–∞")
            found_wrong = [w for w in wrong_words if w in articles_content]
            print(f"   –ó–Ω–∞–π–¥–µ–Ω–æ –≤–∏–ø–∞–¥–∫–æ–≤—ñ —Å–ª–æ–≤–∞: {found_wrong}")
        else:
            print("‚úÖ –í–∏–ø–∞–¥–∫–æ–≤—ñ —Å–ª–æ–≤–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω—ñ")
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø–æ–∑–∏—Ü—ñ—ó
    vocab_pos = html.find('vocabulary-grid')
    exercises_pos = html.find('exercises-container')
    
    if vocab_pos > exercises_pos:
        print("‚ùå –ü–†–û–ë–õ–ï–ú–ê: –°–ª–æ–≤–Ω–∏–∫ —Ä–æ–∑—Ç–∞—à–æ–≤–∞–Ω–æ –ü–Ü–°–õ–Ø exercises")
        print(f"   –ü–æ–∑–∏—Ü—ñ—è —Å–ª–æ–≤–Ω–∏–∫–∞: {vocab_pos}, exercises: {exercises_pos}")

print("\n" + "=" * 70)
print("üìä –í–ò–°–ù–û–í–û–ö:")
print("-" * 60)
print("""
–ü–†–û–ú–ü–¢ –ù–ï –ë–£–í –í–ò–ö–û–ù–ê–ù–ò–ô –ü–û–í–ù–Ü–°–¢–Æ —á–µ—Ä–µ–∑:

1. –ö–†–û–ö 2 (mnemonics_gen.py):
   - phase_id –ù–ï –¥–æ–¥–∞–Ω–æ –¥–æ —Å–∏–≥–Ω–∞—Ç—É—Ä–∏ –º–µ—Ç–æ–¥—É
   - –ú–µ—Ç–æ–¥ –Ω–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î —Å–ª–æ–≤–∞ –∑ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ—ó —Ñ–∞–∑–∏
   
2. –ö–†–û–ö 3 (html_lira.py):  
   - –ü–∞—Ç—á –∑–∞—Å—Ç–æ—Å–æ–≤–∞–Ω–æ –ß–ê–°–¢–ö–û–í–û
   - phase_id –Ω–µ –ø–µ—Ä–µ–¥–∞—î—Ç—å—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ
   
3. –ö–†–û–ö 4 (CSS —Å—Ç–∏–ª—ñ):
   - –ì—Ä–∞–¥—ñ—î–Ω—Ç–∏ –ù–ï –¥–æ–¥–∞–Ω—ñ –≤ CSS
   - –ö–æ–ª—å–æ—Ä–æ–≤–∞ –∫–æ–¥–∏—Ä–æ–≤–∫–∞ –ù–ï –ø—Ä–∞—Ü—é—î

4. –†–ï–ó–£–õ–¨–¢–ê–¢:
   - –°–ª–æ–≤–Ω–∏–∫ –Ω–µ –ø–µ—Ä–µ–º—ñ—â–µ–Ω–æ –Ω–∞–≤–µ—Ä—Ö
   - –í–ø—Ä–∞–≤–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ñ —Å–ª–æ–≤–∞
   - –ù–µ–º–∞—î –∫–æ–ª—å–æ—Ä–æ–≤–æ—ó –∫–æ–¥–∏—Ä–æ–≤–∫–∏ –∫–∞—Ä—Ç–æ–∫

–ü–†–ò–ß–ò–ù–ê: –í–∏–∫–æ–Ω–∞–Ω–Ω—è –ø—Ä–æ–º–ø—Ç—É –±—É–ª–æ –ü–ï–†–ï–†–í–ê–ù–ï –Ω–∞ –∫—Ä–æ—Ü—ñ 2-3,
—Ç–æ–º—É –∑–º—ñ–Ω–∏ –∑–∞—Å—Ç–æ—Å—É–≤–∞–ª–∏—Å—è –ª–∏—à–µ –ß–ê–°–¢–ö–û–í–û.
""")
